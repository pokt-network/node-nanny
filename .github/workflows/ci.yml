name: CI

on:
  push:
    branches:
      - pascal/semantic-release
      # - main
    tags:
      - 'v*'

jobs:
  buildtest:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.1.7

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Test
        env:
          TEST_DISCORD_SERVER_ID: ${{ secrets.TEST_DISCORD_SERVER_ID }}
          TEST_DISCORD_TOKEN: ${{ secrets.TEST_DISCORD_TOKEN }}
        run: pnpm test

  semanticrelease:
    name: Semantic Release
    needs: buildtest
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        with:
          # You can specify specifying version range for the extra plugins if you prefer.
          extra_plugins: |
            @semantic-release/git
          # extends: |
          #   semantic-release-monorepo
        id: semantic
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}

  # docker:
  #   name: Docker build & push
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2

  # - uses: docker/setup-buildx-action@v1
  #   name: Set up Docker Buildx

  # - name: Docker meta
  #   id: docker_meta
  #   uses: crazy-max/ghaction-docker-meta@v1
  #   with:
  #     images: pocketfoundation/node-nanny
  #     tag-custom: latest
  #     tag-semver: |
  #       {{raw}}

  # - name: Build and push
  #   id: docker_build
  #   uses: docker/build-push-action@v2
  #   with:
  #     context: .
  #     push: false
  #     tags: ${{ steps.docker_meta.outputs.tags }}
  #     labels: ${{ steps.docker_meta.outputs.labels }}
