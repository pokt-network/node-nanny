name: CI

on:
  push:
    branches:
      - dev

jobs:
  build-test:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.1.7
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Build
        run: pnpm build
      - name: Test
        env:
          TEST_DISCORD_SERVER_ID: ${{ secrets.TEST_DISCORD_SERVER_ID }}
          TEST_DISCORD_TOKEN: ${{ secrets.TEST_DISCORD_TOKEN }}
        run: pnpm test

  semantic-release:
    name: Semantic Release
    needs: build-test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.1.7
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Build
        run: pnpm build
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/npm
            @semantic-release/git
            @semantic-release/changelog
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker:
    name: Docker Build & Push
    needs: [build-test, semantic-release]
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: CI

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: pocketfoundation/node-nanny
          - dockerfile: ./DockerfileUI
            image: pocketfoundation/node-nanny-ui

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: ${{ matrix.dockerfile }}
          tags: |
            ${{ matrix.image }}:dev
